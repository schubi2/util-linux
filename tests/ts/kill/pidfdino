#!/bin/bash

# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# Copyright (C) 2025 Christian Goeschel Ndjomouo <cgoesc2@wgu.edu>

TS_TOPDIR="${0%/*}/../.."
TS_DESC="pidfdino"

. "$TS_TOPDIR/functions.sh"
ts_init "$*"

# make sure we do not use shell built-in command
if [ "$TS_USE_SYSTEM_COMMANDS" == "yes" ]; then
	TS_CMD_KILL="$(which kill)"
fi

# The pidfs was only introduced in kernel version 6.9,
# which means we cannot get a valid pidfd from earlier versions,
# so we can confidently anticipate the test failure.
if ts_kernel_ver_lt 6 9; then
	TS_KNOWN_FAIL="yes"
fi

ts_check_test_command "$TS_CMD_KILL"
ts_check_test_command "$TS_HELPER_SIGRECEIVE"
ts_check_test_command "$TS_HELPER_KILL_PIDFDINO"

. "$TS_SELF/kill_functions.sh"

all_ok=true

HELPER_SYMLINK="$(mktemp "${TS_OUTDIR}/opXXXXXXXXXXXXX")"
ln -sf "$TS_HELPER_SIGRECEIVE" "$HELPER_SYMLINK"

try_option()
{
	"$HELPER_SYMLINK" >> $TS_OUTPUT 2>> $TS_ERRLOG &
	TEST_PID=$!
	TEST_PIDFD_INO=$( "$TS_HELPER_KILL_PIDFDINO" ${TEST_PID} )
	ts_skip_exitcode_not_supported

	check_test_sigreceive "${TEST_PID}"
	[ $? -eq 1 ] || echo "${HELPER_SYMLINK##*/} helper did not start" >> "$TS_OUTPUT"

	"$TS_CMD_KILL" "$@" "${TEST_PID}:${TEST_PIDFD_INO}" >> $TS_OUTPUT 2>> $TS_ERRLOG
	if [ $? -ne 0 ]; then
		echo "kill $* did not work" >> "$TS_OUTPUT"
		all_ok=false
	fi
	wait $TEST_PID
	if [ $? -ne 1 ]; then
		echo "wait $TEST_PID for $* did not work" >> "$TS_OUTPUT"
		all_ok=false
	fi
}

try_option -s 1
try_option --signal 1
try_option --signal HUP
try_option --signal SIGHUP
try_option -1
try_option -HUP
try_option -SIGHUP

if $all_ok; then
	echo 'all ok' >> "$TS_OUTPUT"
fi
rm -f "$HELPER_SYMLINK"

ts_finalize